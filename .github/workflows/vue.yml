name: "Vue Checker and Coverage"
on:
    pull_request:
    push:
        branches:
            - main

jobs:
    wait-labeler:
      name: "Wait on Labeler"
      runs-on: ubuntu-latest

      steps:
        - if: github.event_name == 'pull_request'
          name: Wait on Labeler
          uses: lucasssvaz/wait-on-workflow@v1
          with:
            workflow: pull-request-chores.yml
            max-wait: 10
            interval: 5
            timeout: 60
            sha: ${{ github.event.pull_request.head.sha || github.sha }}

    lint-build:
        name: "Lint And Build"
        runs-on: ubuntu-latest
        needs: wait-labeler

        if: |
          contains(github.event.pull_request.labels.*.name, 'UI') ||
          contains(github.event.pull_request.labels.*.name, 'Workflow') ||
          github.ref_name == 'main'

        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                node-version: 20

            - name: "Install Dependencies"
              run: |
                npm install --global yarn
                yarn

            - name: "Lint"
              run: yarn lint

            - name: "Build"
              run: yarn build
    
    test:
        name: "Test"
        runs-on: ubuntu-latest
        needs: lint-build
        permissions:
            contents: read
            pull-requests: write

        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: "Install Dependencies"
              run: |
                npm install --global yarn
                yarn
                yarn build

            - name: "Generate Coverage"
              run: |
                yarn coverage
      
            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                files: coverage/lcov.info
                fail_ci_if_error: false
              env:
                CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
