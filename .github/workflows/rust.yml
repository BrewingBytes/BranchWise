name: "Rust Checker and Coverage"
on:
    pull_request:
    merge_group:
    push:
        branches:
            - main

env:
  CARGO_INCREMENTAL: 0

jobs:
    lint:
        name: "Lint"
        runs-on: ubuntu-latest
        container:
          image: ghcr.io/brewingbytes/tauri-builder
        permissions:
            contents: read
            pull-requests: write
            packages: read

        steps:
            - uses: actions/checkout@v4

            - name: Cache
              uses: actions/cache@v4
              with:
                path: |
                  ~/.cargo
                  ./target
                key: ${{ runner.os }}-cargo-${{ hashFiles('**/src-tauri/Cargo.lock') }}

            - name: "Lint"
              run: |
                yarn
                yarn build
                cd src-tauri
                rustup default stable
                cargo clippy --all-features --workspace -- -D warnings
  
    coverage:
        name: "Coverage"
        runs-on: ubuntu-latest
        container:
          image: ghcr.io/brewingbytes/tauri-builder
        permissions:
            contents: read
            pull-requests: write
            packages: read

        steps:
            - name: "Default step"
              run: rustup default stable

            - uses: actions/checkout@v4

            - name: Cache
              uses: actions/cache@v4
              with:
                path: |
                  ~/.cargo
                  ./target
                key: ${{ runner.os }}-cargo-${{ hashFiles('**/src-tauri/Cargo.lock') }}

            - name: Install cargo-llvm-cov
              uses: taiki-e/install-action@cargo-llvm-cov

            - name: Generate code coverage
              working-directory: src-tauri
              run: |
                yarn
                yarn build
                cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v5
              with:
                files: lcov.info
                fail_ci_if_error: false
              env:
                CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
